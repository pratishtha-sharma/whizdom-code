<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="7099" started-at="2023-04-22T13:55:21 IST" finished-at="2023-04-22T13:55:28 IST">
    <groups>
      <group name="browserGroup1">
        <method signature="TestA.testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598]" name="testA" class="suiteA.TestA"/>
      </group> <!-- browserGroup1 -->
      <group name="browserGroup2">
        <method signature="TestAA.testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="testAA" class="suiteA.TestAA"/>
      </group> <!-- browserGroup2 -->
      <group name="smoke">
        <method signature="TestA.testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598]" name="testA" class="suiteA.TestA"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="TestAA.testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="testAA" class="suiteA.TestAA"/>
      </group> <!-- sanity -->
    </groups>
    <test name="TestA" duration-ms="888" started-at="2023-04-22T13:55:21 IST" finished-at="2023-04-22T13:55:22 IST">
      <class name="suiteA.TestA">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteA.TestA@396f6598]" name="init" is-config="true" duration-ms="289" started-at="2023-04-22T13:55:21 IST" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@46d59067]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598]" name="testA" duration-ms="16" started-at="2023-04-22T13:55:22 IST" data-provider="dataSuiteA" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:73)
at suiteA.TestA.testA(TestA.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestA@396f6598]" name="afterTest" is-config="true" duration-ms="423" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteA.TestA@396f6598]" name="init" is-config="true" duration-ms="1" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@46d59067]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598]" name="testA" duration-ms="16" started-at="2023-04-22T13:55:22 IST" data-provider="dataSuiteA" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:73)
at suiteA.TestA.testA(TestA.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestA@396f6598]" name="afterTest" is-config="true" duration-ms="24" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteA.TestA@396f6598]" name="init" is-config="true" duration-ms="1" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@46d59067]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@396f6598]" name="testA" duration-ms="8" started-at="2023-04-22T13:55:22 IST" data-provider="dataSuiteA" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:73)
at suiteA.TestA.testA(TestA.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestA@396f6598]" name="afterTest" is-config="true" duration-ms="24" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- suiteA.TestA -->
    </test> <!-- TestA -->
    <test name="TestAA" duration-ms="6162" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:28 IST">
      <class name="suiteA.TestAA">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="init" is-config="true" duration-ms="0" started-at="2023-04-22T13:55:22 IST" finished-at="2023-04-22T13:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2254127a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="testAA" duration-ms="2015" started-at="2023-04-22T13:55:22 IST" data-provider="dataSuiteA" finished-at="2023-04-22T13:55:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[B1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="afterTest" is-config="true" duration-ms="18" started-at="2023-04-22T13:55:24 IST" finished-at="2023-04-22T13:55:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="init" is-config="true" duration-ms="0" started-at="2023-04-22T13:55:24 IST" finished-at="2023-04-22T13:55:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2254127a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="testAA" duration-ms="2005" started-at="2023-04-22T13:55:24 IST" data-provider="dataSuiteA" finished-at="2023-04-22T13:55:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ mozilla]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[B2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="afterTest" is-config="true" duration-ms="13" started-at="2023-04-22T13:55:26 IST" finished-at="2023-04-22T13:55:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="init" is-config="true" duration-ms="1" started-at="2023-04-22T13:55:26 IST" finished-at="2023-04-22T13:55:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2254127a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAA(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="testAA" duration-ms="2012" started-at="2023-04-22T13:55:26 IST" data-provider="dataSuiteA" finished-at="2023-04-22T13:55:28 IST">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestAA@ea1a8d5]" name="afterTest" is-config="true" duration-ms="82" started-at="2023-04-22T13:55:28 IST" finished-at="2023-04-22T13:55:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- suiteA.TestAA -->
    </test> <!-- TestAA -->
  </suite> <!-- Suite -->
</testng-results>
