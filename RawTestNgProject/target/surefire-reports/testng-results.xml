<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="6072" started-at="2023-04-15T00:06:41 IST" finished-at="2023-04-15T00:06:47 IST">
    <groups>
    </groups>
    <test name="TestA" duration-ms="1878" started-at="2023-04-15T00:06:41 IST" finished-at="2023-04-15T00:06:43 IST">
      <class name="suiteA.TestA">
        <test-method status="PASS" signature="init(org.testng.ITestResult)[pri:0, instance:suiteA.TestA@52a86356]" name="init" is-config="true" duration-ms="781" started-at="2023-04-15T00:06:42 IST" finished-at="2023-04-15T00:06:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@52a86356]" name="testA" duration-ms="24" started-at="2023-04-15T00:06:42 IST" data-provider="dataSuiteA" finished-at="2023-04-15T00:06:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:53)
at suiteA.TestA.testA(TestA.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestA@52a86356]" name="afterTest" is-config="true" duration-ms="878" started-at="2023-04-15T00:06:42 IST" finished-at="2023-04-15T00:06:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="init(org.testng.ITestResult)[pri:0, instance:suiteA.TestA@52a86356]" name="init" is-config="true" duration-ms="1" started-at="2023-04-15T00:06:43 IST" finished-at="2023-04-15T00:06:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestA@52a86356]" name="testA" duration-ms="5" started-at="2023-04-15T00:06:43 IST" data-provider="dataSuiteA" finished-at="2023-04-15T00:06:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
The titles did not match,
The Text did not match,
Invalid data
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:53)
at suiteA.TestA.testA(TestA.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestA@52a86356]" name="afterTest" is-config="true" duration-ms="32" started-at="2023-04-15T00:06:43 IST" finished-at="2023-04-15T00:06:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- suiteA.TestA -->
    </test> <!-- TestA -->
    <test name="TestAA" duration-ms="4116" started-at="2023-04-15T00:06:43 IST" finished-at="2023-04-15T00:06:47 IST">
      <class name="suiteA.TestAA">
        <test-method status="PASS" signature="init(org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@5a8e6209]" name="init" is-config="true" duration-ms="3" started-at="2023-04-15T00:06:43 IST" finished-at="2023-04-15T00:06:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@5a8e6209] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@5a8e6209]" name="testAA" duration-ms="2024" started-at="2023-04-15T00:06:43 IST" data-provider="dataSuiteA" finished-at="2023-04-15T00:06:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[A1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestAA@5a8e6209]" name="afterTest" is-config="true" duration-ms="32" started-at="2023-04-15T00:06:45 IST" finished-at="2023-04-15T00:06:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="init(org.testng.ITestResult)[pri:0, instance:suiteA.TestAA@5a8e6209]" name="init" is-config="true" duration-ms="2" started-at="2023-04-15T00:06:45 IST" finished-at="2023-04-15T00:06:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@5a8e6209] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suiteA.TestAA@5a8e6209]" name="testAA" duration-ms="2008" started-at="2023-04-15T00:06:45 IST" data-provider="dataSuiteA" finished-at="2023-04-15T00:06:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[A2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:suiteA.TestAA@5a8e6209]" name="afterTest" is-config="true" duration-ms="37" started-at="2023-04-15T00:06:47 IST" finished-at="2023-04-15T00:06:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- suiteA.TestAA -->
    </test> <!-- TestAA -->
  </suite> <!-- Suite -->
</testng-results>
