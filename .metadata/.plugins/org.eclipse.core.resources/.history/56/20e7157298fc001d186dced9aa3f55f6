package baseClass;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.ITestContext;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;

import reports.ExtentManager;

public class TestBaseClass {
	
	public ExtentReports reports;
	public ExtentTest test;
	public String browser;
	public WebDriver driver;
	public Properties prop;
	
	
//	@BeforeMethod(alwaysRun = true) //as there are groups in test the before method did not get run when groups tag is run so add this to make sure it also runs
//	public void init(ITestContext con, ITestResult result) {
//		reports = ExtentManager.getReports();
//		//System.out.println(result.getMethod().getMethodName().toUpperCase()); // to get name of class which is being run
//		
//		test = reports.createTest(result.getMethod().getMethodName().toUpperCase());
//		result.setAttribute("reporter", test); //test here is the testcase
//		
//		//browser = con.getCurrentXmlTest().getParameter("browser"); // to get the parameter from the xml using ITestContext
//		   //but this will run only when we want to run all testcase in same browser. To run few case in chrome and few in another browser we need to change logic
//		//System.out.println("Browser name is: "+browser);
//		
//		//String groupName[] = con.getAllTestMethods()[0].getGroups();
//		String groupName[] = con.getAllTestMethods()[0].getGroups();
//		String browsergrp = "";
//		for (String gn :groupName) {
//			if(gn.startsWith("browsergroup")) {
//				browsergrp= gn;
//				break;
//			}
//		}
//		// here we have found the browser group present in the test
//		System.out.println("*******************Name of browser group is= "+browsergrp);
//		
//		//now we will compare the group name of test with one present in testng xml and run test in that browser
//		browser = con.getCurrentXmlTest().getParameter(browsergrp); // we got the parameter value here and based on this we will open test in the browser
//		System.out.println("Name of browser to run test is= " + browser);
//		
//	}
	
	
	public WebDriver launchBrowser() throws IOException {
		
		prop = new Properties();
		
		FileInputStream fis = new FileInputStream(System.getProperty("user.dir")+"\\src\\test\\java\\baseClass\\globalProp.properties");
		
		prop.load(fis);
		
		String browserName = prop.getProperty("browser");  //provide this when using eclipse
		
		if(browserName.contains("chrome")) //can not use == as it is used for reference comparision pointing to same address while .equals() is used for object comparision
		{
			System.setProperty("webdriver.chrome.driver", "F:\\Automation work\\chromedriver_win32 (1)\\chromedriver.exe");
			//System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"\\src\\main\\java\\resources\\chromedriver.exe");
//			ChromeOptions opt = new ChromeOptions();
//			if(browserName.contains("headless"))
//			{
//				opt.addArguments("headless");
//			}
//			driver = new ChromeDriver(opt);
			driver = new ChromeDriver();
		    //setDriver(new ChromeDriver());    //in case when we use driver variable defined as private here
		}
		else if(browserName.equals("firefox"))
		{
			System.setProperty("webdriver.gecko.driver", "F:\\Automation work\\geckodriver-v0.26.0-win64\\geckodriver.exe");
			//System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"\\src\\main\\java\\resources\\geckodriver.exe");
			driver = new FirefoxDriver();
			//setDriver(new FirefoxDriver());   //in case when we use driver variable defined as private here
		}
		else if(browserName.equals("edge"))
		{
			System.setProperty("webdriver.edge.driver", "F:\\Automation work\\edgedriver_win64\\msedgedriver.exe");
			driver = new EdgeDriver();
		}
		
		driver.manage().window().maximize();
		
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		return driver;
		
	}
	
	
//	@AfterTest  // getting configuration error because of this so as of now commented it out- 2 Nov 22
//	public void quit() {
//		reports.flush();	
//	}
//	
	public void log(String msg) {
		System.out.println(msg);
		test.log(Status.INFO, msg);
	}
	
	
	public void failAndStop(String msg) { // this will fail in testng and report but will stop
		logFailure(msg); //report
		softAssert.fail(msg); //testng
		softAssert.assertAll(); //stop the testcase
	}

}
